package Entity;

import Exception.InvalidAminoAcidException;
import Exception.InvalidCodomException;

/**
 * A class that allow handle 3 nitrogenous bases.
 * 
 * @author guilherme
 *
 */
public class Codom {

	private NitrogenousBase[] codom;

	/**
	 * @param codom
	 *            Array of 3 nitrogenous bases that composes the codom
	 * @throws InvalidCodomException
	 */
	public Codom(NitrogenousBase[] codom) {
		super();
		if (codom.length != 3) {
			throw new InvalidCodomException();
		}
		this.codom = codom;
	}

	/**
	 * @return the respective amino acid generated by the codom value
	 * @throws InvalidAminoAcidException
	 */
	public AminoAcid getAminoacid() throws InvalidAminoAcidException {
		switch (this.toString()) {
		case "UUU":
			return new AminoAcid('F');
		case "CUU":
			return new AminoAcid('L');
		case "AUU":
			return new AminoAcid('I');
		case "GUU":
			return new AminoAcid('V');
		case "UUC":
			return new AminoAcid('F');
		case "CUC":
			return new AminoAcid('L');
		case "AUC":
			return new AminoAcid('I');
		case "GUC":
			return new AminoAcid('V');
		case "UUA":
			return new AminoAcid('L');
		case "CUA":
			return new AminoAcid('L');
		case "AUA":
			return new AminoAcid('I');
		case "GUA":
			return new AminoAcid('V');
		case "UUG":
			return new AminoAcid('L');
		case "CUG":
			return new AminoAcid('L');
		case "AUG":
			return new AminoAcid('M');
		case "GUG":
			return new AminoAcid('V');
		case "UCU":
			return new AminoAcid('S');
		case "CCU":
			return new AminoAcid('P');
		case "ACU":
			return new AminoAcid('T');
		case "GCU":
			return new AminoAcid('A');
		case "UCC":
			return new AminoAcid('S');
		case "CCC":
			return new AminoAcid('P');
		case "ACC":
			return new AminoAcid('T');
		case "GCC":
			return new AminoAcid('A');
		case "UCA":
			return new AminoAcid('S');
		case "CCA":
			return new AminoAcid('P');
		case "ACA":
			return new AminoAcid('T');
		case "GCA":
			return new AminoAcid('A');
		case "UCG":
			return new AminoAcid('S');
		case "CCG":
			return new AminoAcid('P');
		case "ACG":
			return new AminoAcid('T');
		case "GCG":
			return new AminoAcid('A');
		case "UAU":
			return new AminoAcid('Y');
		case "CAU":
			return new AminoAcid('H');
		case "AAU":
			return new AminoAcid('N');
		case "GAU":
			return new AminoAcid('D');
		case "UAC":
			return new AminoAcid('Y');
		case "CAC":
			return new AminoAcid('H');
		case "AAC":
			return new AminoAcid('N');
		case "AAA":
			return new AminoAcid('K');
		case "GAC":
			return new AminoAcid('D');
		case "UAA":
			return new AminoAcid('X');
		case "CAA":
			return new AminoAcid('Q');
		case "GAA":
			return new AminoAcid('E');
		case "UAG":
			return new AminoAcid('X');
		case "CAG":
			return new AminoAcid('Q');
		case "AAG":
			return new AminoAcid('K');
		case "GAG":
			return new AminoAcid('E');
		case "UGU":
			return new AminoAcid('C');
		case "CGU":
			return new AminoAcid('R');
		case "AGU":
			return new AminoAcid('S');
		case "GGU":
			return new AminoAcid('G');
		case "UGC":
			return new AminoAcid('C');
		case "CGC":
			return new AminoAcid('R');
		case "AGC":
			return new AminoAcid('S');
		case "GGC":
			return new AminoAcid('G');
		case "UGA":
			return new AminoAcid('X');
		case "CGA":
			return new AminoAcid('R');
		case "AGA":
			return new AminoAcid('R');
		case "GGA":
			return new AminoAcid('G');
		case "UGG":
			return new AminoAcid('W');
		case "CGG":
			return new AminoAcid('R');
		case "AGG":
			return new AminoAcid('R');
		case "GGG":
			return new AminoAcid('G');
		default:
			throw new InvalidCodomException();
		}
	}

	@Override
	public String toString() {
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.append(this.codom[0].toString());
		stringBuilder.append(this.codom[1].toString());
		stringBuilder.append(this.codom[2].toString());
		return stringBuilder.toString();
	}

}
